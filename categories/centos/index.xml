<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Centos on MingguiLu - Linux</title>
    <link>http://linux.mingguilu.com/categories/centos/</link>
    <description>Recent content in Centos on MingguiLu - Linux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 23 Feb 2017 21:14:26 +0800</lastBuildDate>
    <atom:link href="http://linux.mingguilu.com/categories/centos/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>CentOS7使用YUM搭建Samba文件共享</title>
      <link>http://linux.mingguilu.com/2017/02/23/centos7%E4%BD%BF%E7%94%A8yum%E6%90%AD%E5%BB%BAsamba%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB</link>
      <pubDate>Thu, 23 Feb 2017 21:14:26 +0800</pubDate>
      
      <guid>http://linux.mingguilu.com/2017/02/23/centos7%E4%BD%BF%E7%94%A8yum%E6%90%AD%E5%BB%BAsamba%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB</guid>
      <description>

&lt;h3 id=&#34;1-关于samba:7f3b8ed4e97f874da5c624bfbeb106fd&#34;&gt;1. 关于Samba&lt;/h3&gt;

&lt;p&gt;Samba用于在Linux、UNIX和Windows之间提供安全、稳定、快速的文件和打印服务。&lt;/p&gt;

&lt;p&gt;Samba所需的软件包括：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Samba  服务器端软件包&lt;/li&gt;
&lt;li&gt;Samba-client  客户端软件包&lt;/li&gt;
&lt;li&gt;Samba-common  Samba公共文件软件包&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Samba有smbd和nmbd两个守护进程组成，两个进程的而启动脚本是独立的：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;smbd服务进程  为客户端提供文件共享和打印机服务，还负责用户权限验证以及锁功能，默认监听端口TCP协议的139和445&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;nmbd服务进程  提供NetBIOS名称服务，以满足基于Common Internet File System (CIFS)协议的共享访问，默认使用UDP协议的137端口&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;2-关闭防火墙和selinux:7f3b8ed4e97f874da5c624bfbeb106fd&#34;&gt;2. 关闭防火墙和SELinux&lt;/h3&gt;

&lt;p&gt;CentOS7防火墙与SELinux默认是开启状态，并拒绝远程用户对Samba的访问，需要暂时关闭。&lt;/p&gt;

&lt;p&gt;查看防火墙状态&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# systemctl status firewalld.service
● firewalld.service - firewalld - dynamic firewall daemon
   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled; vendor preset: enabled)
   Active: active (running) since 二 2016-10-18 00:23:15 CST; 38min ago
 Main PID: 843 (firewalld)
   CGroup: /system.slice/firewalld.service
           └─843 /usr/bin/python -Es /usr/sbin/firewalld --nofork --nopid

10月 18 00:23:15 localhost.localdomain systemd[1]: Started firewalld - dynamic firewall daemon.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看SELinux状态&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# getenforce
Enforcing
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;临时关闭SELinux&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# setenforce 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;永久关闭SELinux&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# sed -i &amp;quot;/SELINUX=/c SELINUX=disable&amp;quot; /etc/sysconfig/selinux
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;临时关闭防火墙&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# systemctl stop firewalld.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;永久关闭防火墙&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# systemctl disable firewalld.service
Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.
Removed symlink /etc/systemd/system/basic.target.wants/firewalld.service.
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-配置samba服务器:7f3b8ed4e97f874da5c624bfbeb106fd&#34;&gt;3. 配置Samba服务器&lt;/h3&gt;

&lt;p&gt;安装Samba软件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# yum install -y samba

# rpm -qa | grep samba
samba-common-4.4.4-12.el7_3.noarch
samba-client-libs-4.4.4-12.el7_3.x86_64
samba-common-tools-4.4.4-12.el7_3.x86_64
samba-4.4.4-12.el7_3.x86_64
samba-common-libs-4.4.4-12.el7_3.x86_64
samba-libs-4.4.4-12.el7_3.x86_64
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动smb和nmb服务&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# systemctl start smb.service
# systemctl start nmb.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;停止smb和nmb服务&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# systemctl stop smb.service
# systemctl stop nmb.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重启smb和nmb服务&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# systemctl restart smb.service
# systemctl restart nmb.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看smb和nmb服务状态&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# systemctl status smb.service
# systemctl status nmb.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置smb和nmb服务器自启动&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# systemctl enable smb.service
# systemctl enable nmb.service
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;4-创建共享目录:7f3b8ed4e97f874da5c624bfbeb106fd&#34;&gt;4. 创建共享目录&lt;/h3&gt;

&lt;p&gt;假设目前有设计、开发、运维三个部门，各自创建一个部门共享目录供部门内部共享文件，和一个公共共享目录供部门间互相共享文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# mkdir -p /filesrv/{design,develop,ops,share/{design,develop,ops}}

# tree /filesrv/
/filesrv/
├── design
├── develop
├── ops
└── share
    ├── desing
    ├── develop
    └── ops
7 directories, 0 files
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;5-创建samba账户:7f3b8ed4e97f874da5c624bfbeb106fd&#34;&gt;5. 创建Samba账户&lt;/h3&gt;

&lt;p&gt;在使用useradd创建系统账户时使用参数 -s /sbin/nologin 指定账户无法登陆系统，提高账户安全性&lt;/p&gt;

&lt;p&gt;Smaba共享使用的账户就是服务器端操作系统中真实存在的系统账户，但必须使用smbpasswd命令添加为Samba账户并设置独立的密码，而不可以使用系统密码&lt;/p&gt;

&lt;p&gt;Samba默认将账户与密码文件存放在/var/lib/samba/private目录下&lt;/p&gt;

&lt;p&gt;假设每个部门创建2个Samba账户，并加入对应部门的组中：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# groupadd design
# useradd design1 -g design -s /sbin/nologin -M
# useradd design2 -g design -s /sbin/nologin -M
# smbpasswd -a design1
# smbpasswd -a design2

# groupadd develop
# useradd develop1 -g develop -s /sbin/nologin -M
# useradd develop2 -g develop -s /sbin/nologin -M
# smbpasswd -a develop1
# smbpasswd -a develop2

# groupadd ops
# useradd ops1 -g ops -s /sbin/nologin -M
# useradd ops2 -g ops -s /sbin/nologin -M
# smbpasswd -a ops1
# smbpasswd -a ops2
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;6-修改配置文件:7f3b8ed4e97f874da5c624bfbeb106fd&#34;&gt;6. 修改配置文件&lt;/h3&gt;

&lt;p&gt;Samba默认配置文件：/etc/samba/smb.conf&lt;/p&gt;

&lt;p&gt;好习惯说三遍：备份配置文件！备份配置文件！备份配置文件！&lt;/p&gt;

&lt;p&gt;配置文件解析：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[global]                                                                                    # 定义全局策略
    workgroup = SAMBA                                                               # 定义工作组                                  
    interfaces = lo 192.168.80.101/24                               # 指定samba监听哪些网络端口
    hosts allow = 127. 192.168.80. EXCEPT 192.168.80.250            # 指定有权访问Samba服务器资源的主机，与之相反的是hosts deny，使用EXCEPT可以指定例外的IP地址
    log_file = /var/log/samba/log.%m                            # 指定日志文件，每个访问主机会独立产生日志
    max log size = 50                                                       # 定义单个日志文件最大容量为50kb

    security = user                                                                 # 设置客户端访问Samba的方式
    # user表示使用用户名和密码验证身份
    # share表示匿名访问
    # server表示验证身份的访问，但账户信息保存在另一台smb服务器上
    # domain也表示验证身份的访问，但账户信息保存在活动目录中

    passdb backend = tdbsam                                           # 账户与密码的存储方式
    # smbpasswd表示老的明文格式存储账户及密码
    # tdbsam表示基于TDB的密文格式存储
    # ldapsam表示用LDAP存储账户资料

    guest account = nobody                                      # 设置匿名账户为nobody
    deadtime = 10# 连接回话自动关闭的期限，在大量并发访问环境中可提高服务器性能
    max connections = 0                                         # 设置最大连接数，0表示无限制

    printing = cups                                                                 # 设置打印工具为cups ?? http://yuanbin.blog.51cto.com/363003/115768/
    printcap name = cups                                        # ？？？
    load printers = yes                                                         # 是否共享打印机
    cups options = raw                                                          # 打印属性

[filesrv]                                                                                   # 共享名称
        comment = Home Directories                              # 共享描述信息
        path = /filesrv                                         # 共享路径
        browseable = no                                                 # 是否对所有人可见（yes|no）
        public = no                                                                     # 是否被所有人可读(yes|no)
        read only = No                                                              # 是否只读（yes|no）
        writeable = no                                                              # 是否可写（yes|no）
        write list =                                                                    # 可写用户或组列表
        create mask = 0744                                                      # 客户端上传文件的默认权限
        directory mask = 0755                                       # 客户端创建目录的默认权限
        valid users =                                                                   # 白名单
        invalid users =                                                             # 黑名单
        inherit acls = Yes                                                      # 继承访问控制列表（yes|no）
        guest ok = no                                                           # 是否允许匿名访问，仅当全局设置security=share时有效（yes|no）
        available = yes                                                             # 是否启用该共享(yes|no)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;假设每个Samba目录都对自己部门的共享目录可读可写，所有的Samba用户都对share目录可读可写&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cat smb.conf

[global]
    workgroup = SAMBA
    security = user
    passdb backend = tdbsam
    printing = cups
    printcap name = cups
    load printers = yes
    cups options = raw

[homes]
    comment = Home Directories
    valid users = %S, %D%w%S
    browseable = No
    read only = No
    inherit acls = Yes
    available = no                              # 关闭用户家目录共享

[printers]
    comment = All Printers
    path = /var/tmp
    printable = Yes
    create mask = 0600
    browseable = No

[print$]
    comment = Printer Drivers
    path = /var/lib/samba/drivers
    write list = root
    create mask = 0664
    directory mask = 0775

[design]
    comment = design share
    path = /filesrv/design
    write list = @design                

[develop]
    comment = develop share
    path = /filesrv/develop
    write list = @develop

[ops]
    comment = ops share
    path = /filesrv/ops
    write list = @ops

[share]
    comment = public share
    path = /filesrv/share
    write list = @design @develop @ops
    create mask = 0775         # 创建文件的用户和所属组拥有可读写执行权限，其它用户可读可执行
    directory mask = 0775      # 创建目录的用户和所属组拥有可读写执行权限，其它用户可读可执行
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;7-修改共享目录权限:7f3b8ed4e97f874da5c624bfbeb106fd&#34;&gt;7. 修改共享目录权限&lt;/h3&gt;

&lt;p&gt;除了要在Samba主配置文件中定义权限外，还需要为系统目录设置正确的权限&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# chmod 1770 /filesrv/{design,develop,ops,share}
# chmod 1777 /filesrv/share -R
# chown :design /filesrv/design
# chown :develop /filesrv/develop
# chown :ops /filesrv/ops
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;8-重启samba服务:7f3b8ed4e97f874da5c624bfbeb106fd&#34;&gt;8. 重启Samba服务&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# systemctl restart smb.service
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;9-访问samba共享:7f3b8ed4e97f874da5c624bfbeb106fd&#34;&gt;9. 访问Samba共享&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Windows客户端访问:&lt;code&gt;\\Samba-server-ip&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://linux.mingguilu.com/images/170223_01_09_01.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;使用用户ops1验证，可见四个共享目录，但只有ops和share可访问&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://linux.mingguilu.com/images/170223_01_09_03.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;无权限访问design和develop目录&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://linux.mingguilu.com/images/170223_01_09_02.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Linux客户端访问&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;查看Samba主机上的共享信息&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# smbclient -L \\192.168.80.102
Enter root&#39;s password:          # 仅查看共享信息不需要密码，此处直接回车，以匿名用户查看
Anonymous login successful
Domain=[SAMBA] OS=[Windows 6.1] Server=[Samba 4.4.4]

    Sharename       Type      Comment
    ---------       ----      -------
    print$          Disk      Printer Drivers
    design          Disk      design share
    develop         Disk      develop share
    ops             Disk      ops share
    share           Disk      public share
    IPC$            IPC       IPC Service (Samba 4.4.4)
Anonymous login successful
Domain=[SAMBA] OS=[Windows 6.1] Server=[Samba 4.4.4]

    Server               Comment
    ---------            -------
    LOCALHOST            Samba 4.4.4

    Workgroup            Master
    ---------            -------
    SAMBA                LOCALHOST
    WORKGROUP            IMKINDU-PC
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;访问Samba共享目录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# smbclient -U develop2 //192.168.80.102/develop
Enter develop2&#39;s password:
Domain=[SAMBA] OS=[Windows 6.1] Server=[Samba 4.4.4]
smb: \&amp;gt;
smb: \&amp;gt; ls
  .                                   D        0  Sat Feb 25 05:54:45 2017
  ..                                  D        0  Fri Feb 24 18:36:11 2017
  test                                D        0  Sat Feb 25 05:44:55 2017
  test1.txt                           N        0  Sat Feb 25 05:54:40 2017
  test2.md                            N        0  Sat Feb 25 05:54:40 2017
  test3                               D        0  Sat Feb 25 05:54:45 2017

        39294212 blocks of size 1024. 38295904 blocks available
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;常见问题fqa:7f3b8ed4e97f874da5c624bfbeb106fd&#34;&gt;常见问题FQA&lt;/h3&gt;

&lt;h4 id=&#34;1-安装了samba-client-但使用-smbclient-命令时如下报错:7f3b8ed4e97f874da5c624bfbeb106fd&#34;&gt;1. 安装了samba-client，但使用&lt;code&gt;smbclient&lt;/code&gt;命令时如下报错：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# smbclient -L \\192.168.80.102
smbclient: relocation error: /lib64/libsamba-credentials.so.0: symbol GSS_KRB5_CRED_NO_CI_FLAGS_X, version gssapi_krb5_2_MIT not defined in file libgssapi_krb5.so.2 with link time reference       # 缺失samba软件
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决方法：安装samba软件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# yum install -y samba
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-查看samba主机共享信息时-有报错:7f3b8ed4e97f874da5c624bfbeb106fd&#34;&gt;2. 查看Samba主机共享信息时，有报错：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# smbclient -L \\192.168.80.102
Enter root&#39;s password:
session setup failed: NT_STATUS_LOGON_FAILURE     # 登陆失败，一般为账户或密码错误
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决方法：仅查看共享信息不需要密码，此处直接回车，以匿名用户查看&lt;/p&gt;

&lt;h4 id=&#34;3-访问samba共享目录时-有报错:7f3b8ed4e97f874da5c624bfbeb106fd&#34;&gt;3. 访问Samba共享目录时，有报错&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# smbclient -U develop2 //192.168.80.102
\\192.168.80.102: Not enough &#39;\&#39; characters in service    # 共享路径输入有误，一般使用//ip格式访问时会报错
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决：按照正确的格式输入共享路径 &lt;code&gt;//Samba-server-ip/share-name&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;4-访问samba共享目录时-有报错:7f3b8ed4e97f874da5c624bfbeb106fd&#34;&gt;4. 访问Samba共享目录时，有报错：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# smbclient -U develop2 //192.168.80.102/filesrv
Enter develop2&#39;s password:
Domain=[SAMBA] OS=[Windows 6.1] Server=[Samba 4.4.4]
tree connect failed: NT_STATUS_BAD_NETWORK_NAME    # 输入性错误，一般为输入了错误的共享名称
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决方法：检查并修正共享名称，比如本案中虽然各部门共享目录存放在filesrv目录中，但Samba配置文件中并未将filesrv设置为共享目录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# smbclient -U develop2 //192.168.80.102/develop
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;5-访问共享目录时-有报错:7f3b8ed4e97f874da5c624bfbeb106fd&#34;&gt;5. 访问共享目录时，有报错：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# smbclient -U develop2 //192.168.80.102/develop
Enter develop2&#39;s password:
Connection to 192.168.80.102 failed (Error NT_STATUS_HOST_UNREACHABLE)      # 无法连接Samba服务器，一般为网络故障或防火墙策略造成
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决方法：排除网络连接问题，调整防火墙策略，或关闭防火墙&lt;/p&gt;

&lt;h4 id=&#34;6-访问共享目录是-有报错:7f3b8ed4e97f874da5c624bfbeb106fd&#34;&gt;6. 访问共享目录是，有报错：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# smbclient -U develop2 //192.168.80.102/ops
Enter develop2&#39;s password:
Domain=[SAMBA] OS=[Windows 6.1] Server=[Samba 4.4.4]
smb: \&amp;gt;
smb: \&amp;gt; ls
NT_STATUS_ACCESS_DENIED listing \*     # 访问被拒绝，权限不足
smb: \&amp;gt; mkdir test
NT_STATUS_MEDIA_WRITE_PROTECTED making remote directory \test  # 写保护，权限不足
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解决方法： 检查Samba目录的共享权限，或服务器文件系统的访问权限，是否不允许客户端或用户访问&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;参考文档&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;《Linux运维之道（第二版）》 - Samba文件共享 P176~189&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Linux软件安装与维护</title>
      <link>http://linux.mingguilu.com/2016/12/30/linux%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E7%BB%B4%E6%8A%A4</link>
      <pubDate>Fri, 30 Dec 2016 09:09:19 +0800</pubDate>
      
      <guid>http://linux.mingguilu.com/2016/12/30/linux%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E4%B8%8E%E7%BB%B4%E6%8A%A4</guid>
      <description>

&lt;h3 id=&#34;1-使用软件源码包:9667daa69c84529bfb2ccc8da43c9833&#34;&gt;1. 使用软件源码包&lt;/h3&gt;

&lt;h3 id=&#34;2-debian-ubuntu:9667daa69c84529bfb2ccc8da43c9833&#34;&gt;2. Debian/Ubuntu&lt;/h3&gt;

&lt;p&gt;Debian系Linux发行版的软件包格式为deb&lt;/p&gt;

&lt;h4 id=&#34;2-1-dpkg:9667daa69c84529bfb2ccc8da43c9833&#34;&gt;2.1 dpkg&lt;/h4&gt;

&lt;p&gt;dpkg的是基于Debian系统的一个低级包管理器。它可以安装，删除，提供有关资料，以及建立*.deb包，但它不能自动下载并安装它们相应的依赖包。&lt;/p&gt;

&lt;p&gt;查看帮助&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg --help
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看指定软件包的信息&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg -I 下载/Software/vivaldi-stable_1.6.689.46-1_amd64.deb

#以Vivaldi浏览器deb安装包为例
##必须使用软件包的完整名称
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;列出指定软件包里的文件目录&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg -c 下载/Software/vivaldi-stable_1.6.689.46-1_amd64.deb

#必须使用软件包的完整名称
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装deb软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg -i vivaldi-stable_1.6.689.46-1_amd64.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;列出所有已安装的软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg -l
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查询是否已安装指定软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg -l vivaldi-stable

#即可看到软件名称、版本、架构、描述信息
#注意软件名称必须正确，比如查询“vivaldi”就会提示“dpkg-query: 没有找到与 vivaldi 相匹配的软件包”
#当不能确认完整的软件包名称，可以再输入“vivaldi”后，按“Tab”键，会列出所有相关包名称
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看已安装的软件包的详细信息&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg -s vivaldi-stable

#同上，必须指定软件名称“vivaldi-stable”，而不能用原始的软件包名称“vivaldi-stable_1.6.689.46-1_amd64.deb”
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;列出指定软件包安装后的所有文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg -L vivaldi-stable

#同上
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;卸载软件包（保留配置文件）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg -r vivaldi-stable

#同上，必须指定软件名称“vivaldi-stable”，而不能用原始的软件包名称“vivaldi-stable_1.6.689.46-1_amd64.deb”
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;卸载软件包（删除配置文件）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg -p vivaldi-stable

#有些软件包卸载后还会遗留一些配置文件，使用`-p`就像在windows上卸载软件时勾选上“同时清除用户配置文件”
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装指定目录及其子目录下所有的“.deb”包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg -R --install debpackages/

# -R 参数表示递归，指定目录和子目录下所有的.deb包都将被安装
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;释放软件包，但不配置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg --unpack vivaldi-stable_1.6.689.46-1_amd64.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重新配置软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg --configure
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;替换软件包信息&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg --update-avail
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;清除包的当前可用信息&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg --clear-avail
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;丢弃所有不能安装和不可用软件包的信息&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg --forget-old-unavail
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;显示版本&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dpkg --version
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-2-apt-cache-apt-get:9667daa69c84529bfb2ccc8da43c9833&#34;&gt;2.2 apt-cache、apt-get&lt;/h4&gt;

&lt;h5 id=&#34;2-2-1-apt-cache:9667daa69c84529bfb2ccc8da43c9833&#34;&gt;2.2.1 apt-cache&lt;/h5&gt;

&lt;p&gt;apt-cache是Linux下的apt软件包管理工具，使用它能查询到apt的二进制软件包缓存文件,结合一些参数使用能查寻到软件包信息和软件包依赖关系等&lt;/p&gt;

&lt;p&gt;列出所有软件包的名称&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-cache pkgnames
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;列出所有以指定字符开头的软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-cache pkgnames apache2

#以“apache2”为例
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;列出包含指定关键字的软件包和简介&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-cache search apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以便于阅读的格式介绍该软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-cache show apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查询软件包的依赖关系&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-cache showpkg apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;统计全部软件包的信息&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-cache stats
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;2-2-2-apt-get:9667daa69c84529bfb2ccc8da43c9833&#34;&gt;2.2.2 apt-get&lt;/h5&gt;

&lt;p&gt;apt-get是Debian及其衍生版的高级包管理器，并提供命令行方式来从多个来源检索和安装软件包，其中包括解决依赖性。和dpkg不同的是，apt-get不是直接基于.deb文件工作，而是基于软件包的正确名称。&lt;/p&gt;

&lt;p&gt;更新软件源（/etc/apt/source.list）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;升级已安装的所有软件包（不管依赖性，不添加包，也不删除包）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;升级已安装的所有软件包（根据依赖关系的变化，添加包或删除包）&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get dist-upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装指定的软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install apache2

#以“apache2”为例
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装多个软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install apache2 mysql-server php5

#同时安装“apache2”、&amp;quot;mysql-server&amp;quot;、&amp;quot;php5&amp;quot;，并解决依赖性
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装包含指定字符串的软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install &#39;*name*&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装软件包但不升级&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install packageName --no-upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装指定名称和版本的软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install apache2=2.4.18-2ubuntu3.1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;卸载软件包但不清除配置文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get remove apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;卸载软件包同时清除配置文件&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get purge apaceh2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get remove --purge apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;清理本地软件仓库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get clean
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;仅下载指定软件源码包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get --download-only source apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下载指定软件包并解包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get source apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;同时下载、解包并编译软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get --compile source apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;仅下载不安装软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get download apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看软件包版本变更日志&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get changelog apache2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;检查是否有损坏的依赖关系&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get check
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;建立指定软件包的编译环境&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get build-dep apache2

#为手工编译软件apache2,提前把编译过程中需要用的软件包先安装配置好
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将已经删除了的软件包的.deb安装文件从硬盘中删除掉&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get autoclean
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将已经安装了的所有软件包的.deb包从硬盘中删除掉&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get clean
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;删除为了满足其他软件包的依赖而安装的，但现在不再需要的软件包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get autoremove apache2
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>